generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model investor {
  id          String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  description String?    @db.VarChar(255)
  image       String?    @db.VarChar(255)
  name        String     @db.VarChar(255)
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @db.Timestamp(6)
  user_id     String     @db.Uuid
  tenant_id   String     @db.VarChar(255)
  user        user       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  purchase    purchase[]
}

model painting {
  id         String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name       String     @db.VarChar(255)
  artist     String     @db.VarChar(255)
  year       Int
  price      Int
  created_at DateTime   @default(now()) @db.Timestamp(6)
  updated_at DateTime   @default(now()) @db.Timestamp(6)
  purchase   purchase[]
}

model purchase {
  id          String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  investor_id String   @db.Uuid
  painting_id String   @db.Uuid
  points      Int
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  investor    investor @relation(fields: [investor_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  painting    painting @relation(fields: [painting_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String     @unique @db.VarChar(255)
  firstName   String?    @db.VarChar(255)
  lastName    String?    @db.VarChar(255)
  roq_user_id String     @db.VarChar(255)
  tenant_id   String     @db.VarChar(255)
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @db.Timestamp(6)
  investor    investor[]
}
